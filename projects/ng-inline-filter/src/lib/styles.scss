$nf-border-radius: 4px !default;
$nf-border-width:  1px !default;
$nf-dropdown-height: 250px;
$nf-dropdown-width: 16rem;
$nf-text-small: 90%;
$nf-color-add-background:  #008800;
$nf-color-add-foreground:     #fff;
$nf-color-border:  rgba(0, 0, 0, .08) !default;
$nf-color-button-hover: rgba(0, 0, 0, .08) !default;
$nf-color-delete:  rgba(0, 0, 0, .5) !default;
$nf-color-primary: rgb(30, 167, 253) !default;
$nf-color-primary-dark: darken($nf-color-primary, 10%);
$nf-color-text:  rgba(0, 0, 0, .5) !default;
$nf-color-text-dark:  rgba(0, 0, 0, 0.7) !default;
$nf-color-filter-border: darken($nf-color-border, 10%);
$nf-color-filter-background: #fcfcfc;
$nf-inner-padding: .25rem;
$nf-height-inner: 1.75rem;
$nf-height-full: $nf-height-inner + 2 * $nf-inner-padding;
$nf-caret: url("data:image/svg+xml;utf8,<svg fill='black' xmlns='http://www.w3.org/2000/svg' width='10' height='10' viewBox='0 0 20 20'><path d='M5 7l5 5 5-5z'/></svg>");

@mixin box-shadow-outer($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: .1) {
    box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin position($t: null, $r: null, $b: null, $l: null) {
    bottom: $b; left: $l; right: $r; top: $t;
}

@mixin force-width($size) {
    width: $size;
    min-width: $size;
    max-width: $size;
    flex-shrink: 0;
}

@mixin absolute($t: null, $r: null, $b: null, $l: null) {
    @include position($t, $r, $b, $l);
    position: absolute;
}

@mixin fixed($t: null, $r: null, $b: null, $l: null) {
    @include position($t, $r, $b, $l);
    position: fixed;
}

.nf *,
.nf-dropdown,
.nf-dropdown * {
    box-sizing: border-box;
}

.nf-pointer {
    cursor: default;
}

.nf-h3 {
    font-size: 130%;
    font-weight: normal;
    margin: 2rem 0 1rem
}
    
.nf-noselect {
    user-select: none;
}

.nf-auto-size {
    display: inline-block;
    height: calc($nf-height-inner + 2px);
    padding-left: .5rem;
    padding-right: .5rem;

    .sizer {
        height: 0;
        margin-top: 0;
        margin-bottom: 0;
        padding-top: 0;
        padding-bottom: 0;
        pointer-events: none;
        white-space: nowrap;
    }

    .nf-overlay-target {
        width: 100%;
    }

    input {
        padding-left: 0;
        padding-right: 0;
        width: 100%;
    }
}

.nf-complex-filter {
    border: $nf-border-width solid $nf-color-border;
    border-radius: $nf-border-radius;

    .nf-inner {
        cursor: text;
        display: flex;
        flex-direction: row;
        flex-grow: 1;
        min-height: $nf-height-full;

        & > ng-scrollbar {
            flex-grow: 1;
        }
    }

    &.focused-none {
        box-shadow: inset 0 1px 2px rgb(0 0 0 / 10%), 0 0 4px rgb(0 0 0 / 10%);
    }

    &.nf-open {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    .nf-scroll-container {
        display: flex;
        flex-direction: row;
        flex-grow: 1;
        flex-wrap: wrap;
        padding: $nf-inner-padding;
        padding-bottom: 0;
        user-select: none;

        & > filter-dropdown {
            width: auto;
        }

        .nf-button-add-layout {
            display: flex;
            flex-direction: column;
            flex-grow: 0;
            padding: $nf-inner-padding;

            & {
                height: $nf-height-inner;
            }

            svg {
                width: 20px;
            }
        }
    }

    &.nf-scrollable {
        filter-node {
            height: $nf-height-inner;
        }

        .nf-inner {
            height: $nf-height-full;
        }

        .nf-scroll-container {
            flex-wrap: nowrap;
        }
        
        .nf-group-inline {
            margin-bottom: 0;
        }

        .nf-comparison-inline {
            margin-bottom: 0;
        }

        .nf-complex-filter-filters { 
            flex-wrap: nowrap;
        }
    }

    &-query {
        background-color: transparent;
        border: 0;
        border-radius: 0;
        box-shadow: none;
        height: $nf-height-inner;
        min-width: 5rem;

        &:focus {
            outline: none;
        }
    }

    &-filters {
        align-items: center;
        display: flex;
        flex-direction: row;
        flex-shrink: 0;
        margin-right: 1rem;
    }

    &-buttons {
        @include box-shadow-outer(-1px, 0, 0, .1);
        align-items: center;
        background-color: white;
        display: flex;
        flex-direction: row;
        flex-shrink: 0;
        gap: $nf-inner-padding;
        height: $nf-height-inner;
        margin-top: $nf-inner-padding;
        padding-left: $nf-inner-padding;
        padding-right: $nf-inner-padding;

        button {
            display: flex;
        }

        svg {
            width: 18px;
        }
    }
}

.nf-icon {
    width: 14px;
}

//
// BUTTON
//
.nf-button {
    & {
        border-radius: $nf-border-radius;
        border: 0;
        padding: .5rem .75rem;
    }

    &:focus {
        outline: 1px solid $nf-color-primary;
    }

    &.nf-button-add-outline {
        background-color: transparent;
        border: 1px solid $nf-color-add-background;
        border-radius: $nf-border-radius;
        color: $nf-color-add-background;
        
        svg {
            fill: $nf-color-add-foreground;
        }

        &:hover {
            background-color: $nf-color-add-background;
            color: $nf-color-add-foreground;
            cursor: default;
        }
    }

    &.nf-button-add {
        background-color: $nf-color-add-background;
        
        svg {
            fill: $nf-color-add-foreground;
        }

        &:hover {
            opacity: .5;
        }
    }

    &.nf-button-add2 {
        background-color: transparent;
        border: 1px solid $nf-color-border;
        border-radius: $nf-border-radius;
        
        svg {
            fill: $nf-color-text;
        }

        &:hover {
            background-color: $nf-color-button-hover;

            svg {
                fill: $nf-color-text-dark;
            }
        }
    }

    &.nf-button-default {
        background-color: transparent;
        
        svg {
            fill: $nf-color-text;
        }

        &:hover {
            background-color: $nf-color-button-hover;

            svg {
                fill: $nf-color-text-dark;
            }
        }

        &.active {
            font-weight: bolder;
        }
    }

    &.nf-square {
        padding: .25rem;
    }

    &:focus {
        outline: 1px solid $nf-color-primary;
    }

    svg {
        fill: white;
    }
}

.nf-code {
    font-family: monospace;
    font-size: inherit;
    text-transform: uppercase;
}

//
// INPUTS
//
.nf-input-date,
.nf-input-number,
.nf-input-dropdown,
.nf-input-select,
.nf-input-text {
    & {
        background: #fff;
        border: 1px solid $nf-color-border;
        border-radius: $nf-border-radius;
        height: $nf-height-full;
        padding: .5rem .75rem;
        width: 100%;
    }

    &:focus {
        outline: 1px solid $nf-color-primary;
    }
}

.nf-input-dropdown {
    text-align: left;
    background-image: $nf-caret;
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 10px 10px;
    padding-right: 1.5rem;
}

//
// COMPARISONS
//
.nf-comparison-grid {
    & {
        align-items: center;
        display: flex;
        margin: 0;
        max-width: none;
        gap: .5rem;
    }

    .nf-comparison-field {
        @include force-width(10rem);
    }

    .nf-comparison-operator {
        @include force-width(6rem);
    }

    .nf-comparison-value {
        flex-grow: 1;
    }

    .nf-input-date,
    .nf-input-dropdown,
    .nf-input-number,
    .nf-input-select,
    .nf-input-text {
        width: 100%;
    }
}

.nf-comparison-inline {
    & {
        background-color: $nf-color-filter-background;
        border-radius: $nf-border-radius;
        border: 1px solid $nf-color-filter-border;
        display: inline-flex;
        height: $nf-height-inner;
        margin-bottom: $nf-inner-padding;
        margin-right: $nf-inner-padding;
    }

    .nf-input-date,
    .nf-input-dropdown,
    .nf-input-number,
    .nf-input-select,
    .nf-input-text {
        background-color: transparent;
        border: 0;
        border-radius: 0;
        padding-bottom: $nf-inner-padding;
        padding-top: $nf-inner-padding;

        &:focus {
            outline: 1px solid $nf-color-primary;
        }
    }

    .nf-input-select {
        padding-right: 1rem;
    }

    .nf-comparison-value {
        align-items: center;
        display: inline-flex;
        flex-direction: row;
        flex-shrink: 0;
        min-width: 2.5rem;
        position: relative;

        & > * {
            flex-grow: 1;
        }

        .nf-input-date-layout {
            width: 9rem;
        }

        .nf-input-number-layout {
            width: 4rem;
        }

        .nf-input-select-layout,
        .nf-input-text-layout {
            width: 8rem;
        }

        .nf-input-checkbox {
            margin-left: 1rem;
        }
    }

    .nf-comparison-operator {
        border-left: 1px solid $nf-color-border;
        border-right: 1px solid $nf-color-border;
    }

    .nf-comparison-negated {
        align-items: center;
        border-right: 1px solid $nf-color-border;
        display: flex;
        padding-left: .375rem;
        padding-right: .375rem;
        text-transform: uppercase;
    }

    .nf-icon {
        width: 12px;
    }

    input, button, select {
        height: $nf-height-inner;
        padding-bottom: $nf-inner-padding;
        padding-top: $nf-inner-padding * .75;
        line-height: 1;
    }

    & *:focus {
        position: relative;
        z-index: 1;
    }
}

//
// GROUP
//
.nf-group-grid {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    gap: .5rem;

    .nf-group-header {
        display: flex;
        flex-direction: row;
        flex-grow: 1;
        justify-content: space-between;
    }

    .nf-group-types,
    .nf-group-add {
        align-items: center;
        display: flex;
        flex-direction: row;
        flex-grow: 0;
        gap: .5rem;
        margin-top: .5rem;
    }

    .nf-group-children {
        display: flex;
        flex-direction: column;
        flex-grow: 0;
        gap: .5rem;
        padding-left: 1rem;
        padding-right: 0;
        position: relative;

        &::before {
            @include absolute(-.5rem, null, $nf-height-full * 0.5, 1.5rem);
            border-left: 2px dashed $nf-color-border;
            content: '';
            width: 2px;
            margin-top: -1px;
            margin-left: -1px;
        }
    }

    .nf-group-child,
    .nf-group-add {
        margin-right: 0;
        margin-left: 2rem;
        position: relative;

        &::before {
            @include absolute($nf-height-full * 0.5, 100%, null, -1.5rem);
            border-bottom: 2px dashed $nf-color-border;
            content: '';
            height: 2px;
            margin-top: -1px;
            margin-left: -1px;
        }
    }
    
    .nf-group-add {
        padding: 0 $nf-inner-padding * 2;
    }
}

.nf-group-inline {
    & {
        align-items: center;
        background-color: $nf-color-filter-background;
        border: 1px solid $nf-color-filter-border;
        border-radius: $nf-border-radius;
        display: inline-flex;
        height: $nf-height-inner;
        margin-bottom: $nf-inner-padding;
        margin-right: $nf-inner-padding;
    }

    .nf-group-text{
        align-items: center;
        display: flex;
        padding-left: .75rem;
        padding-right: .375rem;
        text-transform: uppercase;
    }

    .nf-icon {
        width: 12px;
    }
}

//
// DROPDOWN
//
.nf-dropdown-layout {
    width: $nf-dropdown-width;

    &-items {
        list-style: none;
        margin: 0;
        max-height: $nf-dropdown-height;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 0;
    }

    &-search {
        input {
            width: 100%;
        }
    }

    &-descriptive {
        width: 300px;
        
        .nf-dropdown-text,
        .nf-dropdown-description {
            width: 50%;
        }

        .nf-dropdown-layout-item {
            display: flex;
        }
    }

    &-item {
        display: flex;
        flex-direction: row;
        flex-grow: 1;

        .nf-dropdown-text,
        .nf-dropdown-description {
            line-height: 1.5;
            overflow-x: hidden;
            overflow-y: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .nf-dropdown-description {
            font-size: $nf-text-small;
            font-weight: normal;
            opacity: .7;
            text-align: right;
        }
    }
}

.nf-dropdown {
    @include box-shadow-outer(0, 4px, 4px, 0.1);
    background: white;
    border: $nf-border-width solid $nf-color-border;
    border-radius: $nf-border-radius;
    padding: .5rem 0;

    & * {
        box-sizing: border-box;
    }

    &-search {
        padding: .25rem .5rem 1rem .5rem;
    }

    &-item {
        padding: .5rem .5rem;

        &:hover, &.hover {
            background: $nf-color-border;
            color: inherit;
            outline: none;
        }

        &:focus, &.focus {
            background: $nf-color-primary;
            color: #fff;
            outline: none;
        }

        &:active, &.active {
            background: $nf-color-primary-dark;
            color: #fff;
            outline: none;

            &:hover {
                background: $nf-color-primary-dark;
            }

            &:focus {
                background: $nf-color-primary-dark;
            }
        }
    }
}

.nf-comparison-delete {
    align-items: center;
    display: flex;
    padding-left: .5rem;
    padding-right: .5rem;

    svg {
        fill: $nf-color-delete;
    }

    &:focus {
        outline: 1px solid $nf-color-primary;
    }

    &:focus {
        box-shadow: 0 0 0 .25rem rgba($nf-color-primary, .2);
    }
}

.nf-details {
    border: 1px solid $nf-color-border;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    max-height: 350px;
    padding: 1.75rem
}

//
// GROUP
//
.nf-sorting {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    gap: .5rem;

    &-row {
        display: flex;
        flex-direction: row;
        flex-grow: 1;
        gap: .5rem;
    }

    &-field {
        flex-grow: 1;
    }

    &-mode {
        @include force-width(9rem);
    }
}

filter-dropdown {
    width: 100%;
}